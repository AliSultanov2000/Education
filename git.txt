Система контроля версий — это система, записывающая изменения в файл или набор файлов в течение времени и позволяющая вернуться позже к определённой версии.

Для чего нужен Git? - Git позволяет гибко управлять проектом, сохраняя код, версионность. Это хороший инструмент для командной работы.

Git является децентрализованной системой контроля версий!
Преимущества децентрализации: 






Основные методы при работе с Git:
ЗАПОЛНЕНИЕ ДАННЫХ ПОЛЬЗОВАТЕЛЯ
1) git config --global user.name "Али Султанов"  - Заполнение имени в системе Git
2) git config --global user.email "ali.sultanov.2024@mail.ru"  - Заполнение почты в системе Git


НАЧАЛО РАБОТЫ В Git:
4) mkdir repository_name - Создание репозитория в Git
5) cd repository_name - Переход в сам репозиторий
6) git init - Инициализация репозитория
7) git status - Статус репозитория
8) git --version  - Версия Git-a
9) clear - почистить экран
10) touch README.md - создание файла README
11) git add -A - добавление для внесения в коммит всех файлов в рабочем каталоге (файлы будут гореть зеленым)
12) git add file_name - добавление для внесения в коммит только одного файла
# git commit -m "add new feature in ml_design.py" - создание коммита 
14) 
15) 
16) 
17) 
18) 
19) 
20) 

Комит - слепок системы!

Основные состояния файла:
1) Рабочий каталог
2) Неотслеживаемое состояние
2) Добавлен в add
3) Добавлен в commit

Основные преимущества Git:



Как работать в команде при помощи Git: 
